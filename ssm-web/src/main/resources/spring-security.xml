<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd">
    
    <!-- 配置不拦截的资源 -->
    <security:http pattern="/login.jsp" security="none"></security:http>
    <security:http pattern="/failer.jsp" security="none"/>
    <security:http pattern="/css/**" security="none"/>
    <security:http pattern="/img/**" security="none"/>
    <security:http pattern="/plugins/**" security="none"/>
    <security:http pattern="/js/**" security="none"/>
    
    <!--
    	配置具体的规则
    	auto-config="true"	不用自己编写登录的页面，框架提供默认登录页面
    	use-expressions="false"	是否使用SPEL表达式
    -->
    <security:http auto-config="true" use-expressions="false">
    	<!-- 配置具体的拦截的规则 pattern="请求路径的规则" access="访问系统的人，必须有ROLE_USER,ROLE_ADMIN的角色" -->
    	<security:intercept-url pattern="/**" access="ROLE_USER,ROLE_ADMIN"/>
    	
    	<!-- 定义跳转的具体的页面 
    		username-parameter：username (默认)
    		password-parameter：password (默认)
    	-->
        <security:form-login
                login-page="/login.jsp"
                login-processing-url="/login"
                default-target-url="/index.jsp"
                authentication-failure-url="/failer.jsp"
                authentication-success-forward-url="/pages/main.jsp"
                authentication-failure-forward-url="/login.jsp"
        />
    	
    	<!-- 关闭CSRF,默认是开启的 -->
        <security:csrf disabled="true" />
        
        <!-- 退出 退出就这直接访问/logout就可以了，退出时候初始化session，成功后跳转到/login.jsp-->
        <security:logout invalidate-session="true" logout-url="/logout" logout-success-url="/login.jsp" />
        
        <!-- 权限不足时候跳转到指定页面 -->
        <security:access-denied-handler error-page="/403.jsp" />
        
    </security:http>

    
    <!-- 切换成数据库中的用户名和密码 -->
    <security:authentication-manager>
    	<!-- 登录时候验证调用Spring IOC容器中的userService进行校验密码等 -->
        <security:authentication-provider user-service-ref="userService">
            <!-- 配置加密的方式 前台输入的密码使用passwordEncoder加密-->
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>
    
    <!-- 配置加密类 -->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
</beans>